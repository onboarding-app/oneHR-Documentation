openapi: 3.0.1
info:
  title: oneHR
  description: This is a documentation for Cognizants internal application aimed at helpin HR department inside Cognizant.
  version: '0.1'
servers:
  - url: http://localhost:5000
paths:
  /documents/{user_id}/{document_id}/uploads:
    post:
      description: Endpoint for the user to upload a file for an attached document
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}
                  success:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |
                    {
                      "data": null, 
                      "message": "File uploaded successfully!", 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /documents/{user_id}/{document_id}/delete:
    delete:
      description: Auto generated using Swagger Inspector
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}
                  success:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |
                    {
                      "data": null, 
                      "message": "File delete successfully!", 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /list/{user_id}:
    post:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: ord
          in: query
          schema:
            type: string
          example: id
        - name: per_page
          in: query
          schema:
            type: string
          example: '100'
        - name: rev
          in: query
          schema:
            type: boolean
          example: 'False'
        - name: search_fields
          in: query
          schema:
            type: string
          example: title%2Cuser_id%2Ctitle%2Cuser_id
        - name: term
          in: query
          allowEmptyValue: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
          example: '0'
        - name: filters
          in: query
          schema:
            type: string
          example: apr%2Crej%2Ccrt%2Cupl%2Copt%2Cmdt
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      per_page:
                        type: integer
                      total_elements:
                        type: integer
                      term:
                        type: string
                      page:
                        type: integer
                      total_pages:
                        type: integer
                      items:
                        type: array
                        items:
                          type: string
                  success:
                    type: string
                  message: {}
              examples:
                '0':
                  value: |
                    {
                      "data": {
                        "items": [], 
                        "page": 0, 
                        "per_page": 100, 
                        "term": "", 
                        "total_elements": 0, 
                        "total_pages": 0
                      }, 
                      "message": null, 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /documents/{user_id}/{document_id}/status:
    post:
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    sender:
                      type: string
                    comment:
                      type: string
                status:
                  type: string
            examples:
              '0':
                value: '{}'
              '1':
                value: >-
                  {"status":"Approved", "data": {"sender":"admin",
                  "comment":""}}
              '2':
                value: >-
                  {"status":"Rejected", "data": {"sender":"admin",
                  "comment":""}}
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}
                  success:
                    type: string
                  message:
                    type: string
              examples:
                '0':
                  value: |
                    {
                      "data": null, 
                      "message": "File status: \"None\"", 
                      "success": "ok"
                    }
                '1':
                  value: |
                    {
                      "data": null, 
                      "message": "File status: \"Approved\"", 
                      "success": "ok"
                    }
                '2':
                  value: |
                    {
                      "data": null, 
                      "message": "File status: \"Rejected\"", 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /list:
    post:
      description: Auto generated using Swagger Inspector
      parameters:
        - name: ord
          in: query
          schema:
            type: string
          example: id
        - name: per_page
          in: query
          schema:
            type: string
          example: '100'
        - name: rev
          in: query
          schema:
            type: boolean
          example: 'False'
        - name: search_fields
          in: query
          schema:
            type: string
          example: title%2Cuser_id%2Ctitle%2Cuser_id
        - name: term
          in: query
          allowEmptyValue: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
          example: '0'
        - name: filters
          in: query
          schema:
            type: string
          example: apr%2Crej%2Ccrt%2Cupl%2Copt%2Cmdt
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      per_page:
                        type: integer
                      total_elements:
                        type: integer
                      term:
                        type: string
                      page:
                        type: integer
                      total_pages:
                        type: integer
                      items:
                        type: array
                        items:
                          type: string
                  success:
                    type: string
                  message: {}
              examples:
                '0':
                  value: |
                    {
                      "data": {
                        "items": [], 
                        "page": 0, 
                        "per_page": 100, 
                        "term": "", 
                        "total_elements": 0, 
                        "total_pages": 0
                      }, 
                      "message": null, 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /documents/create:
    post:
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: string
            examples:
              '0':
                value: user_id=0&title=contract&is_mandatory=false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: {}
                  success:
                    type: string
                  message: {}
              examples:
                '0':
                  value: |
                    {
                      "data": null, 
                      "message": null, 
                      "success": "ok"
                    }
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
  /documents/{user_id}/{document_id}/fetch:
    get:
      description: Endpoint for view or download attached user file
      parameters:
        - name: as_attachment
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: successful operation
      servers:
        - url: http://localhost:5000
    servers:
      - url: http://localhost:5000
